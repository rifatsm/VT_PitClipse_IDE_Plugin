/*******************************************************************************
 * Copyright 2012-2019 Phil Glover and contributors
 *  
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License.  You may obtain a copy
 * of the License at
 *  
 *  http://www.apache.org/licenses/LICENSE-2.0
 *  
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the
 * License for the specific language governing permissions and limitations under
 * the License.
 ******************************************************************************/

package org.pitest.pitclipse.ui.view;

import java.io.File;

import org.eclipse.jface.action.Action;
import org.eclipse.jface.action.IToolBarManager;
import org.eclipse.swt.SWT;
import org.eclipse.swt.browser.Browser;
import org.eclipse.swt.widgets.Composite;
import org.eclipse.ui.IActionBars;
import org.eclipse.ui.part.ViewPart;
import org.pitest.pitclipse.ui.utils.PitclipseUiUtils;

/**
 * A view displaying the HTML report generated by PIT.
 */
public class PitView extends ViewPart implements SummaryView {
    public static final String VIEW_ID = "org.pitest.pitclipse.ui.view.PitView";
    public static final String BLANK_PAGE = "about:blank";
    public static final String BACK_BUTTON_TEXT = "<";
    public static final String HOME_BUTTON_TEXT = "Home";
    public static final String FORWARD_BUTTON_TEXT = ">";
    private Browser browser = null;
    private String homeUrlString = null;

    @Override
    public synchronized void createPartControl(Composite parent) {
        PitclipseUiUtils.executeSafely(
            () -> {
                browser = new Browser(parent, SWT.NONE);
                resetBrowser();
                browser.addProgressListener(new PitUiUpdatePublisher(browser));
                IActionBars actionBars = getViewSite().getActionBars();
                IToolBarManager toolBar = actionBars.getToolBarManager();
                // create back button
                toolBar.add(new Action(BACK_BUTTON_TEXT) {
                    @Override
                    public void run() {
                        browser.back();
                    }
                });
                // create home button for navigation
                toolBar.add(new Action(HOME_BUTTON_TEXT) {
                    @Override
                    public void run() {
                        if (homeUrlString != null) {
                            // only set url, if an home is set otherwise NPE
                            browser.setUrl(homeUrlString);
                        }
                    }
                });
                // create forward button
                toolBar.add(new Action(FORWARD_BUTTON_TEXT) {
                    @Override
                    public void run() {
                        browser.forward();
                }
                });
                actionBars.updateActionBars();
            },
            parent,
            "Failed to create the Pit Summary view",
            "Browser cannot be initialized.");
    }

    /**
     * Set URL to blank and reset homeUrl, to have a clean browser after
     * creation<br>
     * <b>Needed</b> for testing purposes
     */
    private void resetBrowser() {
        browser.setUrl(BLANK_PAGE);
        homeUrlString = null;
    }

    @Override
    public void setFocus() {
        PitclipseUiUtils.setFocusSafely(browser);
    }

    @Override
    public synchronized void update(File result) {
        if (result == null) {
            resetBrowser();
        } else {
            homeUrlString = result.toURI().toString();
            browser.setUrl(homeUrlString);
        }
    }

    @Override
    public void dispose() {
        PitclipseUiUtils.disposeSafely(browser);
        super.dispose();
    }
}
